
iptables es una herramienta de línea de comandos en Linux que permite configurar reglas para el firewall del sistema.

Sirve para controlar el tráfico de red que entra o sale del equipo, permitiendo o bloqueando conexiones según ciertas condiciones, como dirección IP, puerto o protocolo.

#Eliminar reglas iptables definidas, -F=Flush(Borrar)

  -sudo iptables -F


Iptables funciona en "tablas" con el parametro "-t" hacemos referencia, por defecto si no usamos el "-t" todo se creara en la tabla "filter", NO SE PUEDEN CREAR TABLAS

Iptables tiene las siguientes tablas:

filter (la tabla por defecto para permitir o denegar paquetes)

nat (traducción de direcciones)

mangle (modificación avanzada de paquetes)

raw (para omitir el seguimiento de conexiones)

security (integración con SELinux)


#Ver las reglas iptables de una tabla, -L=lista las reglas, -v=muestra detalles (como los contadores de paquetes/bytes), -n=no resuelve DNS (más rápido).

  -sudo iptables -L -v -n #ver reglas en la tabla filter(la tabla por defecto)
  -sudo iptables -t nat -L -v -n #ver reglas en la tabla nat

#Reiniciar contador(Un contador en iptables es un número que cuenta los paquetes que coinciden con una regla)

  -sudo iptables -Z


En iptables, una cadena es una lista de reglas que se revisan una por una para decidir qué hacer con un paquete de red (aceptarlo, bloquearlo, redirigirlo, etc.).

🔗 Cadenas principales (predefinidas por el sistema):
INPUT → controla el tráfico que llega al sistema.

OUTPUT → controla el tráfico que sale del sistema.

FORWARD → controla el tráfico que pasa a través del sistema (como si fuera un router).

Estas están en la tabla filter, que es la más común.


Jerarquia en iptables:
Tabla > Cadena > Regla


                                                    ┌─────────────┐
                                                    │   Tabla     │
                                                    │ (filter,    │
                                                    │  nat, etc.) │
                                                    └─────┬───────┘
                                                          │
                                                          ▼
                                                    ┌─────────────┐
                                                    │   Cadena    │
                                                    │ (INPUT,     │
                                                    │  OUTPUT,    │
                                                    │  FORWARD)   │
                                                    └─────┬───────┘
                                                          │
                                                          ▼
                                                    ┌─────────────┐
                                                    │   Regla     │
                                                    │ (Condición  │
                                                    │  + Acción)  │
                                                    └─────────────┘



#Poner las cadenas en ACCEPT/DROP
  -sudo iptables -P INPUT/FORDWARD/OUTPUT DROP/ACCEPT

Una vez explicado eso vamos ha explicar las politicas por defecto, que es lo que va a hacer un paquete cuando la regla no coincide, es decir, si tenemos las cadenas INPUT, FORWARD y OUTPUT en DROP por ejemplo, por defecto no entra nada ni sale nada al menos hasta que tu lo dictamines, si lo tubieramos en ACCEPT aceptaria TODO, y ya podriamos poner las reglas de lo que no queremos que entre

#muestra todas las reglas actuales de iptables en formato de línea de comandos
  -sudo iptables -S
  -P INPUT DROP
  -P FORWARD ACCEPT
  -P OUTPUT ACCEPT


#Estructura regla iptable sencilla
  -sudo iptables -A INPUT (medida que quieres optar) -j ACCEPT (el -A la añade al principio de todas las reglas, y el -I al final de las reglas, el -j es para ACCEPT/DROP)


#Eliminar una regla iptables

Ver las reglas tienes y su numero
  -sudo iptables -L INPUT --line-numbers

Eliminar la regla con su numero
  -sudo iptables -D INPUT (num)

NO SE PUEDEN EDITAR LAS REGLAS, SE TIENEN QUE BORRAR Y PONER BIEN

#Reglas iptables

Permitir el ping, (la enp0s3 es la que sale a internet)
  -sudo iptables -A OUTPUT -i enp0s3 -p icmp -j ACCEPT
  -sudo iptables -A OUTPUT -o enp0s3 -p icmp -j ACCEPT

**ACLARACION

🔹 ¿Qué hace -i y -o?
-i → indica la interfaz de entrada (como enp0s3 o lo) → se usa en la cadena INPUT.
-o → indica la interfaz de salida → se usa en la cadena OUTPUT.

-i solo se usa en INPUT, un truco es que INPUT empieza por i, como -i, pero en minusculas
-o solo se usa en OUTPUT, un truco es que OUTPUT empieza por o, como -o, pero en minusculas

Da igual si pones primero la regla de INPUT o OUTPUT ya que tienen que estar las 2, recuerda que INPUT deja entrar y OUTPUT deja salir, pues es obio que si dices que puede salir(INPUT) pero no le dices que puede entrar(OUTPUT), no funcionara, ya que se complementan el INPUT y OUTPUT

Permitir el trafico en local
  -sudo iptables -A INPUT -i lo -j ACCEPT
  -sudo iptables -A OUTPUT -o lo -j ACCEPT


**ACLARACION

Es muy importante permitir el trafico en local
El tráfico por la interfaz lo (loopback) es esencial porque permite que el propio sistema se comunique internamente consigo mismo, como cuando accedes a localhost; si tienes políticas DROP en iptables y no permites explícitamente el tráfico en lo, muchas funciones internas como servidores locales o resoluciones DNS pueden dejar de funcionar, por eso siempre se recomienda añadir reglas que acepten el tráfico en lo.


Ejemplo personal de la importancia del lo:

yo practicando tenia esto:

sudo iptables -S
-P INPUT DROP
-P FORWARD DROP
-P OUTPUT DROP
-A INPUT -i enp0s3 -p icmp -j ACCEPT
-A OUTPUT -o enp0s3 -p icmp -j ACCEPT

Practicando para hacer ping fuera de la red, lo consegui y hice ping al 8.8.8.8, pero al rato y sin tocar nada volvi a probar y no funcionaba y no habia tocado nada, y yo creia que todo iba bien en mi loclahost porque podia acceder a  mi CUP's desde una interfaz, en general, aunque antes de la regla de permitir el trafico en local ya hos funcionaban en local los servicios seria por falta de refrescarlos o algo raro que no se, siempre es bueno tenerlo

por el momento:

-P INPUT DROP
-P FORWARD DROP
-P OUTPUT DROP
-A INPUT -i enp0s3 -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A OUTPUT -o enp0s3 -p icmp -j ACCEPT
-A OUTPUT -o lo -j ACCEPT


Bien, de momento lo que podemos hacer son pings hacia internet y recibirlos, y dejar pasar el trafico por lo(localhost), recordar tener las reglas de las lineas 139 y 141, porque el ping saldra y entrara si, pero no circulara bien por localhost asique hay que tenerlo

Ahora lo siguiente que haremos es permitir el trafico para las paginas web:

# Permitir tráfico saliente HTTP
sudo iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT

Le decimos que acepte las conexion cuyo puerto destino sea el 80

# Permitir tráfico saliente HTTPS
sudo iptables -A OUTPUT -p tcp --dport 443 -j ACCEPT

Le decimos que acepte las conexion cuyo puerto destino sea el 433

# Permitir tráfico entrante relacionado a esas conexiones
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

Ahora aceptamos las peticiones que vengas de esas llamadas de las comandas anteriores que esten establecidas
